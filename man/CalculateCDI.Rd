% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CalculateCDI.R
\name{CalculateCDI}
\alias{CalculateCDI}
\title{Clustering Deviance Index (CDI)}
\usage{
CalculateCDI(
  sub_gcmat,
  candidate_label_dataframe,
  batch_label = NULL,
  cell_size_factor,
  ncore = 1,
  lrt_pval_threshold = 0.01,
  clustering_method = NULL
)
}
\arguments{
\item{sub_gcmat}{A raw UMI count matrix where each row represents a gene, and 
each column represents a cell. The genes should only included feature genes 
(that are selected by FeatureGeneSelection).}

\item{candidate_label_dataframe}{A vector of cluster labels of the cells or 
a data frame where each column corresponds to one set of cluster labels of 
the cells. This (these) label sets can be clustering results obtained by 
any clustering methods. The length (number of rows) of 
candidate_label_dataframe should be the same as the number of columns in 
sub_gcmat. 
If the column names of label set data frame are provided with the format 
"[ClusteringMethod]_k[NumberOfClusters]" such as "KMeans_K5, `CalculateCDI` 
will extract the "[ClusteringMethod]" as the Cluster_method. 
The clustering method can also be provided in the 
argument "clustering_method" for each label set.}

\item{batch_label}{A vector of characters indicating the batch labels of the cells. 
The length of batch_label should be the same as the number of columns 
in sub_gcmat.}

\item{cell_size_factor}{A numeric vector indicating the size factor 
of the cells. This should be the output of function SizeFactor. 
The length of batch_label should be the same as the number of columns 
in sub_gcmat.}

\item{ncore}{The number of cores to be used for parallel computing. 
The parallel computing is achieved by the bplapply in BiocParallel package.}

\item{lrt_pval_threshold}{A numeric value within (0, 1) indicating 
the p-value threshold for the likelihood ratio test (LRT). If multiple 
batches exist, within each cluster and each gene, CDI will test whether 
a batch-common NB model or a batch-specific NB model should be fitted 
with the LRT. If the p-value is less than this threshold, a batch-specific 
NB model will be fitted. Otherwise, a batch-common NB model will be fitted.}

\item{clustering_method}{A vector of characters indicating the corresponding clustering 
method for each label set. The length of the vector needs to be the same 
as the number of columns in candidate_label_dataframe.}
}
\value{
CalculateCDI returns a list of CDI-AIC and CDI-BIC values if the candidate_label_dataframe 
is a vector or a data frame with 1 column. It returns a data frame with 5 columns if the 
candidate_label_dataframe is a data frame with multiple columns. In the second case, the columns are 
Label_name (name of each label set), Cluster_method (clustering method), CDI-AIC, 
CDI-BIC, and N_cluster (number of clusters). Each row corresponds to one set of cell labels.
}
\description{
This function calculates CDI-AIC and CDI-BIC for each candidate set of cell labels.
CDI calculates AIC and BIC of cell-type-specific gene-specific NB model for UMI counts, 
where the cell types are based on each candidate label set, 
and only the selected subset of genes are considered. 
Whether to use CDI-AIC or CDI-BIC depend on the goals. 
We suggest using CDI-BIC to select optimal main cell types and using CDI-AIC 
to select optimal subtypes, because BIC puts more penalty on the complexity 
of models (number of clusters).
}
\examples{
set.seed(100)
X = cbind(matrix(c(rnbinom(2500, size = 1, mu = 0.1), 
                   rnbinom(2500, size = 1, mu = 0.5)), 
                 nrow = 100, byrow = TRUE),
          matrix(c(rnbinom(2500, size = 1, mu = 1), 
                   rnbinom(2500, size = 1, mu = 0.5)), 
                 nrow = 100, byrow = TRUE))
labs = data.frame(Method1_k2 = rep(c(1,2), c(50,50)), 
Method1_k3 = rep(c(1,2, 3), c(40,30, 30)))
CalculateCDI(sub_gcmat = X,
             candidate_label = labs,
             batch_label = rep(c(1,2), ncol(X)/2),
             cell_size_factor = rep(1, 100),
             ncore = 1)
             
}
\references{
SMartin Morgan, Valerie Obenchain, Michel Lang, Ryan Thompson and Nitesh Turaga (2021). \doi{https://github.com/Bioconductor/BiocParallel}
}
